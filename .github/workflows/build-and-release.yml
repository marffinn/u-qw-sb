name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            artifact_name: browsanka-windows-executable
            runner: self-hosted # Assuming self-hosted for Windows
            spec_file: BROWSANKA.spec
            executable_name: BROWSANKA.exe
    runs-on: ${{ matrix.runner }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Full clone to ensure all files are present

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: python -m pip install --upgrade pip pipenv wheel pyinstaller

    - name: Build executable
      run: pyinstaller ${{ matrix.spec_file }}

    - name: Upload executable artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: dist/

  create_windows_installer:
    needs: build
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full clone to ensure all files are present

      

      - name: Download Windows executable artifact
        uses: actions/download-artifact@v4
        with:
          name: browsanka-windows-executable
          path: executable_dist

      - name: Copy data files (Windows)
        run: |
          Copy-Item -Path "favorites.json" -Destination "executable_dist/"
          Copy-Item -Path "servers_cache.json" -Destination "executable_dist/"
          Copy-Item -Path "settings.json" -Destination "executable_dist/"
          Copy-Item -Path "uttanka.ico" -Destination "executable_dist/"

      - name: Add NSIS to PATH
        run: echo "C:\Program Files (x86)\NSIS" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      

      

      - name: Create Installer Script
        shell: powershell
        run: |
          New-Item -Path installers/windows -ItemType Directory -Force
          @'
!define APP_NAME "BROWSANKA"
!define APP_VERSION "1.0.0" ; This will be updated by CI/CD
!define APP_PUBLISHER "marffinn"
!define APP_URL "https://github.com/marffinn/u-qw-sb"
!define APP_EXE_NAME "BROWSANKA.exe"
!define APP_ICON "uttanka.ico"

; The name of the installer file
OutFile "${APP_NAME}-Setup-${APP_VERSION}.exe"

; The default installation directory
InstallDir "$PROGRAMFILES\${APP_NAME}"

; Request application privileges for Windows Vista/7/8/10
RequestExecutionLevel admin

; Pages
Page directory
Page instfiles

; Uninstaller
UninstallText "This will uninstall ${APP_NAME}. Do you wish to continue?"
UninstallIcon "${APP_ICON}"
Section "Uninstall"
  Delete "$INSTDIR\${APP_EXE_NAME}"
  Delete "$INSTDIR\favorites.json"
  Delete "$INSTDIR\eu-sv.txt"
  Delete "$INSTDIR\servers_cache.json"
  Delete "$INSTDIR\settings.json"
  Delete "$INSTDIR\${APP_ICON}"
  Delete "$SMPROGRAMS\${APP_NAME}\${APP_NAME}.lnk"
  RMDir "$SMPROGRAMS\${APP_NAME}"
  RMDir "$INSTDIR"
  DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APP_NAME}"
SectionEnd

; The installer sections
Section "${APP_NAME} Main Application"
  SetOutPath "$INSTDIR"
  File "dist\${APP_EXE_NAME}"
  File "favorites.json"
  File "eu-sv.txt"
  File "servers_cache.json"
  File "settings.json"
  File "${APP_ICON}"

  ; Create shortcut in Start Menu
  CreateDirectory "$SMPROGRAMS\${APP_NAME}"
  CreateShortcut "$SMPROGRAMS\${APP_NAME}\${APP_NAME}.lnk" "$INSTDIR\${APP_EXE_NAME}" "" "$INSTDIR\${APP_ICON}"

  ; Write uninstall information to the registry
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APP_NAME}" "DisplayName" "${APP_NAME}"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APP_NAME}" "UninstallString" `"$INSTDIR\uninstall.exe"`
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APP_NAME}" "QuietUninstallString" `"$INSTDIR\uninstall.exe" /S`
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APP_NAME}" "InstallLocation" "$INSTDIR"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APP_NAME}" "Publisher" "${APP_PUBLISHER}"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APP_NAME}" "DisplayVersion" "${APP_VERSION}"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APP_NAME}" "URLInfoAbout" "${APP_URL}"
  WriteUninstaller "$INSTDIR\uninstall.exe"
SectionEnd
'@ | Out-File -FilePath installers/windows/installer.nsi -Encoding utf8

      - name: Build Windows Installer
        run: |
          makensis "$env:GITHUB_WORKSPACE\installers\windows\installer.nsi"
          mv "BROWSANKA-Setup-*.exe" "BROWSANKA-Setup-${{ github.ref_name }}.exe"

      - name: Upload Windows installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: browsanka-windows-installer
          path: BROWSANKA-Setup-${{ github.ref_name }}.exe

  release:
    needs: create_windows_installer
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v4 # Added checkout here as well
      - name: Download all installer artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts_download

      - name: List downloaded artifacts
        run: ls -R artifacts_download

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts_download/browsanka-windows-installer/BROWSANKA-Setup-${{ github.ref_name }}.exe
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Force workflow refresh